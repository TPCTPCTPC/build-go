name: Build & Release sing-box

on:
  workflow_dispatch:
  push:
    tags: ['v*']        # 推标签即自动发布

permissions:
  contents: write

env:
  build_tags: "with_clash_api"   # 只编译 Clash API

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # 1. 取 sing-box 最新稳定版 tag
    - name: Fetch latest release tag
      id: latest
      run: |
        tag=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases \
              | jq -r '[.[] | select(.prerelease==false and .draft==false)][0].tag_name')
        echo "tag=$tag" >>"$GITHUB_OUTPUT"

    # 2. 检出对应源码
    - uses: actions/checkout@v4
      with:
        repository: SagerNet/sing-box
        ref: ${{ steps.latest.outputs.tag }}

    # 3. 安装最新稳定版 Go
    - uses: actions/setup-go@v5
      with:
        go-version: stable
        check-latest: true

    # 4. 缓存构建
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    # 5. 编译（官方性能参数 + 单标签）
    - name: Build
      run: |
        echo "Tags: $build_tags"
        CGO_ENABLED=0 go build -trimpath -v \
          -ldflags "-s -w \
                    -X 'github.com/sagernet/sing-box/constant.Version=${{ steps.latest.outputs.tag }}' \
                    -buildid= \
                    -checklinkname=0" \
          -tags "$build_tags" \
          ./cmd/sing-box

    # 6. 运行测试
    - name: Test
      run: go test ./...

    # 7. 发布并上传二进制
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "${{ steps.latest.outputs.tag }}" \
          --title "sing-box ${{ steps.latest.outputs.tag }}" \
          --notes "Automated build (tags: $build_tags)" \
          ./sing-box#sing-box-linux-amd64
